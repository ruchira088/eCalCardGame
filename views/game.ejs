<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Game</title>
    <% include templates/header.ejs %>
    <% include templates/notifications.ejs %>
    <script src="/bower_components/handlebars/handlebars.js"></script>
</head>
<body>
<div id="game" class="container">

    <span id="username" data-userName="<%= player.name.replace(" ", "") %>"></span>

    <h1>Hi <%= player.name %>,</h1>
    <div class="checkbox">
        <label><input id="sound" type="checkbox" checked>Sound</label>
    </div>
    <button id="exitGameBtn">Exit Game</button>
    <div id="playerHand">
        <% for(var i = 0; i < player.cards.length; i++)
        { var card = player.cards[i]; %>
        <img draggable="true" <%= Constants.CardValue %>="<%= card.getValue() %>" class="playingCard"
        src="<%= card.getPicture() %>">
        <% } %>
    </div>
    <div>
        <button onclick="declareVictory()">Announce Victory</button>
    </div>
    <div id="chatArea">
    </div>

    <% if (type === Constants.MultiPlayer)
    { %>
    <div id="onlinePlayersPlaceholder" class="movable">
    <table id="onlinePlayers">
        <tr>
            <th>Players</th>
        </tr>
        <% for(var i = 0; i < onlineUsers.length; i++) { %>
        <tr>
            <td id="<%= onlineUsers[i].replace(" ", "") %>" class="player"><%= onlineUsers[i] %></td>
        </tr>
        <% } %>
    </table>
    </div>
    <% }%>
    <div id="tableArea">
        <div id="cardStack" class="movable">
            <img id="cardDeck" class="playingCard" <%= Constants.CardSource %>="<%= Constants.CARD_SOURCE.DECK %>" onclick=
                "pickUpCard(this)" src="/images/deck/backOfCard.png">
        </div>
        <div id="drawnCard" class="movable"></div>
    </div>

    <div id="announcementAttachPoint">

    </div>
    <div id="exitGameDialog" title="Exit Game">
        <p>Are you sure that you want to exit the game ?</p>
    </div>
</div>
<script id="announcementDialog" type="text/x-handlebars-template">
    <div class="modal fade" id="{{id}}" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    {{{ header }}}
                </div>
                <div class="modal-body">
                    {{{ body }}}
                </div>
                <div class="modal-footer">
                    {{{ footer }}}
                    <button class="backToHomeBtn">Goto home page</button>
                    <button class="dismissModal">OK</button>
                </div>
            </div>
        </div>
    </div>
</script>
<script id="outcomeMessageTemplate" type="text/x-handlebars-template">
    <div id="{{id}}">
        <div class="textMessage">
            {{{ message }}}
        </div>
        <div class="outcomeCards">
        </div>
    </div>
</script>
<script>
    initWebSocket(Constants.Login);
    <% var topCard = drawnCards.showTopCard() %>
    createDrawnCard(new Card("<%= topCard.suit %>", "<%= topCard.number %>"));

    <% if (type === Constants.MultiPlayer)
    { %>
        highlightActivePlayer("<%= onlineUsers[0]%>");
    <%} %>

    $(document).ready(function()
            {
                var plannedExit = false;

                function exitGame()
                {
                    plannedExit = true;
                    window.location = "/game/home";
                }

                $(".movable").draggable();

                $("#playerHand").draggable().resizable();

                $("#exitGameDialog").dialog({
                    modal: true,
                    autoOpen: false,
                    buttons: {
                        Yes: exitGame,
                        No: function()
                        {
                            $(this).dialog("close");
                        }
                    }
                });

                window.onbeforeunload = function ()
                {
                    removeCookie(Constants.GameId);

                    if(!plannedExit && g_socketIO.connected)
                    {
                        return "This action will EXIT the game.";
                    }
                };
//                $(window).unload(function()
//                {
//                    removeCookie(Constants.GameId);
//                    return "Hello World";
//                });

                $("#exitGameBtn").on("click", function()
                {
                    $("#exitGameDialog").dialog("open");
                });

                $("#playerHand .playingCard").draggable(
                        {
                            containment: "#playerHand"
                        }
                ).droppable(
                        {
                            drop: dropFunction,
                            over: overFunction,
                            out: outFunction,
                            accept: acceptFunction(function(droppedElement)
                            {
                                return droppedElement[0] == $("#deckCard")[0] || ($(droppedElement).parent()[0] == $("#drawnCard")[0] && $("#deckCard").length == 0);
                            })
                        }
                );

                const announcementTemplate = Handlebars.compile($("#announcementDialog").html());
                const outcomeMessage = Handlebars.compile($("#outcomeMessageTemplate").html());

                const winnerDialog = announcementTemplate({
                    id: "winner",
                    header: "<span id='winnerHeader'>WINNER</span>",
                    body: outcomeMessage({
                        id: "winnerMessage",
                        message: "Congratulations you WON the game."
                    })
                });

                const opponentWinnerDialog = announcementTemplate({
                    id: "opponentWin",
                    header: "<span><span id='opponentWinner'></span> has WON the game.</span>",
                    body: outcomeMessage({
                        id: "opponentWinnerMessage",
                        message: "The winning cards are the following,"
                    })
                });

                const loserDialog = announcementTemplate({
                    id: "loser",
                    header: "<span id='loserHeader'>LOSER</span>",
                    body: outcomeMessage({
                        id: "loserMessage",
                        message: "You FALSELY declared victory"
                    })
                });

                const opponentLoserDialog = announcementTemplate({
                    id: "opponentLose",
                    header: "<span><span id='opponentLoser'></span> FALSELY declared victory.</span>",
                    body: outcomeMessage({
                        id: "opponentLoserMessage",
                        message: "These are the losing cards"
                    })
                });

                $("#announcementAttachPoint")
                        .append(winnerDialog)
                        .append(opponentWinnerDialog)
                        .append(loserDialog)
                        .append(opponentLoserDialog);

                $(".backToHomeBtn").on("click", exitGame);

                $(".dismissModal").on("click", function()
                {
                    $(this).closest(".modal").modal("hide");
                });

            }
    );
</script>
</body>
</html>