<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/html">
<head>
    <meta charset="UTF-8">
    <title>Home</title>
    <% include templates/header.ejs %>
    <% include templates/notifications.ejs %>
    <script src="/bower_components/handlebars/handlebars.js"></script>
</head>
<body>
<div id="homepage" class="container">
    <h1 id="greeting">Hi <%= user %>,</h1>
    <a href="/game/logout" id="logout">Logout</a>
    <table id="players">
        <tr>
            <th>Online Players</th>
        </tr>
        <%
            for(var i = 0; i < onlineUsers.length; i++)
            {
        %>
        <tr>
            <td id="<%= onlineUsers[i] %>" class="player"><%= onlineUsers[i] %></td>
        </tr>
        <% } %>
    </table>
    <div id="chatArea">
        <% include templates/chatroom.ejs %>
    </div>
    <div>
        <a class="btn btn-primary btn-lg" href="/game/singlePlayer">Single Player</a>
        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#multiPlayerDialog">
            MultiPlayer
        </button>

        <div id="modalDialogContainer">
        </div>

        <% if(!game)
        {%>
        <form action="/game/" method="POST">
            <input name="user" value="<%= user %>" type="hidden">
            <input id="startGameBtn" type="submit" value="Start Game">
        </form>
        <%} else
        {%>
            <div>A game is in progress</div>
        <%}%>
    </div>
    <script id="modalDialogTemplate" type="text/x-handlebars-template">
        <div class="modal fade" id="{{id}}" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">
                            &times;
                        </button>
                        <h4 class="modal-title">
                            {{{title}}}
                        </h4>
                    </div>

                    <div class="modal-body">
                        {{{body}}}
                    </div>

                    <div class="modal-footer">
                        {{{footer}}}
                    </div>
                </div>
            </div>
        </div>
    </script>
    <script id="multiPlayerFooter" type="text/x-handlebars-template">
        <button id="invitePlayersBtn" type="button" data-dismiss="modal" data-toggle="modal"
                data-target="#selectedPlayersDialog" class="btn btn-primary">
            Invite Players
        </button>
    </script>
    <script id="multiPlayerBody" type="text/x-handlebars-template">
        <input id="onlinePlayerSearch" type="text" class="form-control">
        <div id='onlinePlayersList'>
        </div>
    </script>
    <!--<script id="closeBtnTemplate" type="text/x-handlebars-template">-->
        <!--<button type="button" class="btn btn-default" data-dismiss="modal">-->
            <!--Close-->
        <!--</button>-->
    <!--</script>-->
    <script id="btnTemplate" type="text/x-handlebars-template">
        <button id="{{id}}" type="button" class="btn{{classes}}" {{{attributes}}}>{{label}}</button>
    </script>
    <script>
        initWebSocket();

        var selectedPlayers = {
            players: [],
            add: function(value)
            {
                this.players.push(value);
                this.players.sort();
            },
            remove: function(value)
            {
                this.players = this.players.filter(function(val)
                {
                    return val != value;
                });
            }
        }

        const onlinePlayers = <%- JSON.stringify(onlineUsers) %>;
        //const onlinePlayers = ["apple", "ball", "cat", "dog", "fish", "elephant"];

        $(document).ready(function()
        {
            $("#chatArea").draggable();

            var modalDialogTemplate = Handlebars.compile($("#modalDialogTemplate").html());
            var multiPlayerBody = Handlebars.compile($("#multiPlayerBody").html());
            var multiPlayerFooter = Handlebars.compile($("#multiPlayerFooter").html());
            var btnTemplate = Handlebars.compile($("#btnTemplate").html());

            var multiPlayerDialog = modalDialogTemplate({
                id: "multiPlayerDialog",
                title: "Select the players you want to invite to the game",
                body: multiPlayerBody(),
                footer:  multiPlayerFooter() + btnTemplate(closeBtnParameters("multipleCloseBtn"))
            });

            var selectedPlayersDialog = modalDialogTemplate({
                id: "selectedPlayersDialog",
                title: "Waiting for the players to respond",
                body: "<div id='selectedPlayers' class='auto_update'></div>",
                footer: btnTemplate(closeBtnParameters("selectedPlayerCloseBtn"))
            });

            var gameInvitation =  modalDialogTemplate({
                id: "gameInvitation",
                title: "<span id='gameInvitationTitle'></span>",
                body: "<div id='gameSummary'></div>",
                footer: btnTemplate({
                    id: "acceptBtn",
                    label: "Accept Invitation",
                    classes: " btn-success"
                }) + btnTemplate({
                    id: "rejectBtn",
                    label: "Reject",
                    classes: " btn-danger"
                })
            });


            $("#modalDialogContainer").append(multiPlayerDialog).append(selectedPlayersDialog).append(gameInvitation);

            $("#invitePlayersBtn").on("click", function()
            {
                var selectedPlayerContainer = $("#selectedPlayersDialog #selectedPlayers").empty();

                selectedPlayers.players.forEach(function(player)
                {
                    selectedPlayerContainer.append($("<div></div>").attr("data-player-name", player).text(player));
                });

                send(Message(Constants.GameInvitation, selectedPlayers.players));

            });

            // TODO: consolidate the click handlers for the reject button
            $("#rejectBtn").on("click", function()
            {
                $("#gameInvitation").modal("hide");
                //send(Message(Constants.RejectInvitation));
            });

            $("#acceptBtn").on("click", function()
            {
                sendGameInvitationResponse(Constants.AcceptInvitation);
            });

            $("#rejectBtn").on("click", function()
            {
                sendGameInvitationResponse(Constants.RejectInvitation);
            });

            $("#onlinePlayerSearch").on("keyup", function()
            {
                renderOnlineUsersTable(onlinePlayers.filter(function(player)
                {
                    return player.indexOf($(this).val()) != -1;
                }.bind(this)));
            });

            renderOnlineUsersTable(onlinePlayers);

        });

        function sendGameInvitationResponse(response)
        {
            document.cookie = [Constants.GameId, $("#gameSummary").attr("data-game-id")].join("=");
            send(Message(response));
            removeCookie(Constants.GameId);
        }

        function closeBtnParameters(id)
        {
            return {
                id: id,
                label: "Close",
                classes:" btn-default",
                attributes: "data-dismiss='modal'"
            }
        }

        function renderOnlineUsersTable(onlineUsers)
        {
            var playerList = $("#onlinePlayersList").empty();

            onlineUsers.forEach(function(user)
            {
                playerList.append($("<div class='checkbox'></div>").
                    append($("<label></label>").
                    append($("<input type='checkbox'>").on("change", function()
                    {
                        if($(this).prop("checked"))
                        {
                            selectedPlayers.add(user);
                        } else
                        {
                            selectedPlayers.remove(user);
                        }
                    }).prop("checked", selectedPlayers.players.indexOf(user) != -1)).
                    append(user)));
            });
        }

    </script>
</div>
</body>
</html>